{"body":"## Summary\r\nThis script was written to quickly and easily set up automated deployment and security scanning of WordPress installs. The idea is that if you have your WordPress install set up on GIT or SVN, you can use this script to regularly update and secure your site(s).\r\n\r\n## Installation\r\nThese instructions assume that you have basic *nix systems skills. If you read through this and feel totally confused, then you should probably seek some professional help in installing this.\r\n\r\nAlthough this script is flexible enough to be configured and used in a variety of ways. Here's how we prefer to install it:\r\n\r\n# Put the Script on Your Server\r\n\r\nChange directories to the folder above the webroot.\r\n\r\n`cd /path/above/your/webroot`\r\n\r\nMake a folder called scripts to hold this script and any others you might want to run.\r\n\r\n`mkdir scripts`\r\n\r\nChange directories to your scripts folder.\r\n\r\n`cd scripts`\r\n\r\nInitialize GIT.\r\n\r\n`git init`\r\n\r\nCheckout the security scripts code.\r\n\r\n`git checkout git://github.com/peterchester/WordPress-Security-Shell-Script.git security-script`\r\n\r\n# Set up a config\r\n\r\nWhile still in the scripts folder, copy the sample script to a new file that you can configure for your website.\r\n\r\n`cp security-script/security-scan.sh mydomain.security-scan.sh`\r\n\r\nEdit the file (I prefer to use Nano for this. You can choose to use whatever or even FTP and use your favorite file editor)\r\n\r\n`nano mydomain.security-scan.sh`\r\n\r\nDefine at least ROOT_DIR, WRITEABLE_DIRS and the last line in the script where we include the library. You might also want to define KILL_GITLOCK as true to ensure that this script never gets locked out of making GIT updates.\r\n\r\n# Test the script\r\n\r\nBackup your webroot incase the script messes things up.\r\n\r\n`cp -rfp /path/to/your/webroot /path/to/your/webroot.bk`\r\n\r\nRun the script (not this should be running the copy you made).\r\n\r\n`bash /path/above/your/webroot/scripts/mydomain.security-scan.sh`\r\n\r\n# Set up a crontab\r\n\r\nOpen your cron for editing:\r\n\r\n`crontab -e`\r\n\r\nRun this every 5 minutes or so. You can also choose to output the results to a log file.\r\n\r\n*/5 * * * * bash /path/above/your/webroot/scripts/mydomain.security-scan.sh > /dev/null 2>&1\r\n\r\n## License\r\nCopyright Modern Tribe, Inc. (@moderntribeinc) 2012\r\n\r\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License along with this program.  If not, see [http://www.gnu.org/licenses/](http://www.gnu.org/licenses/).\r\n\r\n## Authors and Contributors\r\nAuthored by Chaim Peter Chester (@peterchester) with contributions from Daniel Dvorkin (@mzaweb) and Jonathan Brinley (@jbrinley).\r\n\r\n## Support or Contact\r\nThis code is unsupported and offered on an \"as is\" basis. If you would like support we recommend either asking about it on [Stack Overflow](http://stackoverflow.com/search?q=wordpress+security+scan) or entering an issue on [the github tracker](https://github.com/peterchester/WordPress-Security-Shell-Script/issues)","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"WordPress Security and GIT/SVN Deployment Script","tagline":"A shell script for cron based version control deployments and security scans of WordPress.","google":""}